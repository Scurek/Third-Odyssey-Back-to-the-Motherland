to_has_achievements = {
	# If I write it properly the has_country_modifier in to_has_elysian_achievements bugs out for some reason
	if = {
		limit = {
			to_has_elysian_achievements = yes
		}
	}
	else = {
		custom_trigger_tooltip = {
			tooltip = to_does_not_have_achievements_tt
			always = no
		}
	}
}

to_achievement_window_visible = {
	to_has_elysian_achievements = yes
	has_country_flag = to_achievement_window_open
}

to_has_elysian_achievements = {
	OR = {
		nhs_check_all_elysian_tags = { CONDITION = tag }
		AND = {
			tag = BYZ
			has_country_modifier = byz_flight
		}
		tag = CA0
		tag = EEF
	}
}

to_is_not_elysia_or_rhomania = {
	NOT = {
		OR = {
			nhs_check_all_elysian_tags = { CONDITION = tag }
			AND = {
				tag = BYZ
				has_country_modifier = byz_flight
			}
		}
	}
}

to_started_on_the_old_patch = {
	NOT = { has_global_flag = to_new_achievement_system }
}

to_no_ironman_detected_at_one_point = {
	has_global_flag = to_no_ironman_detected
}

to_achievement_fail_baseline = {
	OR = {
		ironman = no
		to_started_on_the_old_patch = yes
		# to_no_ironman_detected_at_one_point = yes
		NOT = { to_difficulty_normal_or_above = yes }
	}
}

to_difficulty_normal_or_above = {
	has_global_modifier_value = { which = to_difficulty value = 0 }
}

to_show_achievements = {
	NOT = { to_started_on_the_old_patch = yes }
}

to_achievement_province_decision_shown = {
	has_country_flag = to_show_achievement_provinces_decision_$ACHIEVEMENT$
}

to_achievement_status_completed = {
	has_country_flag = to_completed_achievement_$ACHIEVEMENT$
}

to_achievement_completed_window_visible = {
	has_country_flag = to_show_achievement_window_$ACHIEVEMENT$
}

# to_achievement_monumentality_status_failed = {
# 	always = no
# }

to_achievement_pax_deiorum_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_converted_heretics_as_hellenic = yes
	}
}

to_converted_heretics_as_hellenic = {
	has_country_flag = to_converted_heretics_as_hellenic
}

to_is_hellenic = {
	religion = pantheon_worship
}

to_controls_totemist_province = {
	any_province = {
		religion = totemism
		country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
	}
}

to_controls_norse_province = {
	any_province = {
		religion = norse_pagan_reformed
		country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
	}
}

to_controls_nahuatl_province = {
	any_province = {
		religion = nahuatl
		country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
	}
}

to_controls_mayan_province = {
	any_province = {
		religion = mesoamerican_religion
		country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
	}
}

to_controls_inti_province = {
	any_province = {
		religion = inti
		country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
	}
}

to_controls_fetishist_province = {
	any_province = {
		religion = shamanism
		country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
	}
}

to_controls_animist_province = {
	any_province = {
		religion = animism
		country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
	}
}

to_controls_tengri_province = {
	any_province = {
		religion = tengri_pagan_reformed
		country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
	}
}

to_achievement_legion_of_couriers_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
	}
}

to_constructed_all_highways = {
	if = {
		limit = {
			has_global_flag = to_elysian_highways_south_apaleisian_enabled
		}
		to_elysian_highway_south_apaleisian_trigger = {
			TRIGGER = "to_has_elysian_highway_modifier = yes"
		}
		to_elysian_highway_coastal_alt_trigger = {
			TRIGGER = "to_has_elysian_highway_modifier = yes"
		}
		to_elysian_highway_west_trigger = {
			TRIGGER = "to_has_elysian_highway_modifier = yes"
		}
		to_elysian_highway_south_trigger = {
			TRIGGER = "to_has_elysian_highway_modifier = yes"
		}
	}
	else = {
		to_elysian_highway_north_apaleisian_trigger = {
			TRIGGER = "to_has_elysian_highway_modifier = yes"
		}
		to_elysian_highway_coastal_trigger = {
			TRIGGER = "to_has_elysian_highway_modifier = yes"
		}
		to_elysian_highway_west_alt_trigger = {
			TRIGGER = "to_has_elysian_highway_modifier = yes"
		}
		to_elysian_highway_south_alt_trigger = {
			TRIGGER = "to_has_elysian_highway_modifier = yes"
		}
	}
	to_elysian_highway_vinlandic_trigger = {
		TRIGGER = "to_has_elysian_highway_modifier = yes"
	}
	to_elysian_highway_north_trigger = {
		TRIGGER = "to_has_elysian_highway_modifier = yes"
	}
	to_elysian_highway_atlas_trigger = {
		TRIGGER = "to_has_elysian_highway_modifier = yes"
	}
	to_elysian_highway_lakonia_trigger = {
		TRIGGER = "to_has_elysian_highway_modifier = yes"
	}
}

to_highway_province_owned_and_in_the_zone_of_control = {
	country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
	OR = {
		has_influencing_fort = yes	
		any_neighbor_province = {
			has_influencing_fort = yes
			country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
		}
	}
}

to_all_highways_in_the_zone_of_control = {
	if = {
		limit = {
			has_global_flag = to_elysian_highways_south_apaleisian_enabled
		}
		to_elysian_highway_south_apaleisian_trigger = {
			TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
		}
		to_elysian_highway_coastal_alt_trigger = {
			TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
		}
		to_elysian_highway_west_trigger = {
			TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
		}
		to_elysian_highway_south_trigger = {
			TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
		}
	}
	else = {
		to_elysian_highway_north_apaleisian_trigger = {
			TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
		}
		to_elysian_highway_coastal_trigger = {
			TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
		}
		to_elysian_highway_west_alt_trigger = {
			TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
		}
		to_elysian_highway_south_alt_trigger = {
			TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
		}
	}
	to_elysian_highway_vinlandic_trigger = {
		TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
	}
	to_elysian_highway_north_trigger = {
		TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
	}
	to_elysian_highway_atlas_trigger = {
		TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
	}
	to_elysian_highway_lakonia_trigger = {
		TRIGGER = "to_highway_province_owned_and_in_the_zone_of_control = yes"
	}
}

to_achievement_to_make_pytheas_proud_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_was_not_first_to_circumnavigate_the_globe = yes
		to_is_1600_and_success_conditions_were_not_met = yes
	}
}

to_achievement_to_make_pytheas_proud_failed_no_date = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_was_not_first_to_circumnavigate_the_globe = yes
	}
}

to_is_1600_and_success_conditions_were_not_met = {
	is_year = 1600
}

to_was_not_first_to_circumnavigate_the_globe = {
	has_global_flag = circumnavigation_completed
	NOT = { has_country_flag = circumnavigation_first }
}

to_was_first_to_circumnavigate_the_globe = {
	has_country_flag = circumnavigation_first
}

to_every_seazone_explored = {
	west_american_sea_superregion = {
		type = all
		has_discovered = ROOT
	}
	east_american_sea_superregion = {
		type = all
		has_discovered = ROOT
	}
	north_european_sea_superregion = {
		type = all
		has_discovered = ROOT
	}
	south_european_sea_superregion = {
		type = all
		has_discovered = ROOT
	}
	west_african_sea_superregion = {
		type = all
		has_discovered = ROOT
	}
	east_african_sea_superregion = {
		type = all
		has_discovered = ROOT
	}
	indian_pacific_sea_superregion = {
		type = all
		has_discovered = ROOT
	}
	north_pacific_sea_superregion = {
		type = all
		has_discovered = ROOT
	}
}

to_achievement_just_a_little_exarchise_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
	}
}

to_all_exarchs_exist_with_low_liberty_desire = {
	to_check_all_exarchs_including_inactive = {
		TRIGGER = "
		is_subject_of = ROOT
		is_subject_of_type = elysian_subject
		NOT = { liberty_desire = 51 }
		owns_all_provinces = {
			to_exarch_land = { SCOPE = PREV }
		}
		"
	}
}

to_achievement_100_years_away_from_home_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_is_1545_and_success_conditions_were_not_met = yes
	}
}

to_achievement_100_years_away_from_home_failed_no_date = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
	}
}

to_is_1545_and_success_conditions_were_not_met = {
	is_year = 1545
}

to_owns_constantinople = {
	owns_or_subject_of = 151
}

to_does_not_have_the_flight_modifier = {
	NOT = { has_country_modifier = byz_flight }
}

to_achievement_autokrator_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_has_created_an_exarch_in_former_roman_lands = yes
	}
}

to_has_created_an_exarch_in_former_roman_lands = {
	OR = {
		has_country_flag = to_created_exarch_EEA
		has_country_flag = to_created_exarch_EEB
		has_country_flag = to_created_exarch_EED
		has_country_flag = to_created_exarch_EEE
		has_country_flag = to_created_exarch_EEF
		has_country_flag = to_created_exarch_EEG
		has_country_flag = to_created_exarch_EEH
		has_country_flag = to_created_exarch_EEK
		has_country_flag = to_created_exarch_EEI
		has_country_flag = to_created_exarch_EEO
		has_country_flag = to_created_exarch_EER
		has_country_flag = to_created_exarch_EET
		has_country_flag = to_created_exarch_EEU
		has_country_flag = to_created_exarch_EEY
		has_country_flag = to_created_exarch_EEW
		has_country_flag = to_created_exarch_EEN
		has_country_flag = to_created_exarch_ELG
	}
}

to_owns_all_roman_provinces_with_0_autonomy = {
	NOT = {
		any_province = {
			to_roman_empire_greatest_extend = yes
			OR = {
				local_autonomy = 1
				NOT = { owned_by = ROOT }
			}
		}
	}
}

to_achievement_the_only_colonizer_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_did_not_lie_to_portugal = yes
		to_is_1570_and_success_conditions_were_not_met = yes
	}
}

to_achievement_the_only_colonizer_failed_no_date = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_did_not_lie_to_portugal = yes
	}
}

to_did_not_lie_to_portugal = {
	has_global_flag = nhs_portugese_secret_global
}

to_is_1570_and_success_conditions_were_not_met = {
	is_year = 1570
}

to_no_europeans_on_elysium = {
	NOT = {
		north_america = {
			is_sea = no
			owner = {
				OR = {
					technology_group = western
					technology_group = eastern
				}
				NOT = {
					OR = {
						is_subject_of = ROOT
						overlord = {
							is_subject_of = ROOT
						}
					}
				}
			}
		}
	}
}

to_achievement_the_only_colonizer_complete = {
	to_achievement_status_completed = { ACHIEVEMENT = the_only_colonizer }
}

# to_achievement_cities_of_the_new_world_desire_status_failed = {
# 	always = no
# }

to_achievement_no_more_schisms_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
	}
}

to_is_elysian_orthodox = {
	religion = elysian_orthodoxy
}

to_no_non_elysian_orthodox_provinces = {
	NOT = {
		any_province = {
			religion_group = christian
			NOT = { religion = elysian_orthodoxy }
		}
	}
}

to_achievement_post_finem_status_failed = {
	to_achievement_fail_baseline = yes
}

to_reform_carthage = {
	tag = CA0
}

to_own_221 = {
	owns_or_subject_of = 221
}

to_own_125 = {
	owns_or_subject_of = 125
}

to_own_2986 = {
	owns_or_subject_of = 2986
}

to_own_1247 = {
	owns_or_subject_of = 1247
}

to_control_or_own_118 = {
	OR = {
		owns_or_subject_of = 118
		118 = {
			controller = {
				OR = {
					tag = ROOT
					is_subject_of = ROOT
				}
			}
		}
	}
}

to_achievement_veni_vidi_vici_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_did_not_start_with_abysmal_supplies = yes
		to_is_february_1490_and_success_conditions_were_not_met = yes
	}
}

to_achievement_veni_vidi_vici_failed_no_date = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_did_not_start_with_abysmal_supplies = yes
	}
}

to_did_not_start_with_abysmal_supplies = {
	OR = {
		has_country_flag = nhs_new_flight_food_status_1
		has_country_flag = nhs_new_flight_food_status_2
		has_country_flag = nhs_new_flight_food_status_3
		has_country_flag = nhs_new_flight_food_status_4
	}
}

to_is_february_1490_and_success_conditions_were_not_met = {
	is_year = 1490
	OR = {
		is_month = 1
		is_year = 1491
	}
}

to_complete_a_true_nation = {
	mission_completed = to_a_true_nation_mission
}

to_have_no_loans = {
	NOT = { num_of_loans = 1 }
}

to_have_less_than_5_corruption = {
	NOT = { corruption = 5 }
}

to_have_less_than_5_administrative_burden = {
	OR = {
		NOT = { has_government_mechanic = to_administrative_burden_mechanic }
		NOT = {
			has_government_power = {
				mechanic_type = to_administrative_burden_mechanic
				power_type = to_administrative_burden
				value = 5
			}
		}
	}
}

to_achievement_re_restitutor_orbis_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_is_age_of_absolutism = yes
	}
}

to_is_age_of_absolutism = {
	current_age = age_of_absolutism
}

to_controls_all_former_roman_empire_land = {
	owns_all_provinces = {
		to_roman_empire_greatest_extend = yes
	}
	# NOT = {
	# 	any_province = {
	# 		to_roman_empire_greatest_extend = yes
	# 		NOT = {
	# 			owner = {
	# 				OR = {
	# 					tag = ROOT
	# 					is_subject_of = ROOT
	# 					overlord = {
	# 						is_subject_of = ROOT
	# 					}
	# 				}
	# 			}
	# 		}
	# 	}
	# }
}

to_achievement_byzantine_blitz_status_failed = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
		to_is_1700_and_success_conditions_were_not_met = yes
	}
}

to_achievement_byzantine_blitz_failed_no_date = {
	OR = {
		to_achievement_fail_baseline = yes
		to_is_not_elysia_or_rhomania = yes
	}
}

to_is_1700_and_success_conditions_were_not_met = {
	is_year = 1700
}

to_has_completed_entire_elysian_mission_tree = {
	mission_completed = to_capital_of_innovation_mission
	mission_completed = to_gates_of_herakles_mission
	mission_completed = to_in_alexios_footsteps_mission
	OR = {
		mission_completed = to_the_old_gods_mission
		mission_completed = to_defender_of_the_faith_mission
	}
	OR = {
		mission_completed = to_eternal_empire_mission
		mission_completed = to_eternal_empire_mission_ely
	}
}

# Code generated by achievements/generate_achievements.py
to_achievement_pax_deiorum_can_be_completed = {
	to_is_hellenic = yes
	to_controls_totemist_province = yes
	to_controls_norse_province = yes
	to_controls_nahuatl_province = yes
	to_controls_mayan_province = yes
	to_controls_inti_province = yes
	to_controls_fetishist_province = yes
	to_controls_animist_province = yes
	to_controls_tengri_province = yes
}

to_achievement_legion_of_couriers_can_be_completed = {
	to_constructed_all_highways = yes
	to_all_highways_in_the_zone_of_control = yes
}

to_achievement_to_make_pytheas_proud_can_be_completed = {
	to_was_first_to_circumnavigate_the_globe = yes
	to_every_seazone_explored = yes
}

to_achievement_just_a_little_exarchise_can_be_completed = {
	to_all_exarchs_exist_with_low_liberty_desire = yes
}

to_achievement_100_years_away_from_home_can_be_completed = {
	to_owns_constantinople = yes
	to_does_not_have_the_flight_modifier = yes
}

to_achievement_autokrator_can_be_completed = {
	to_owns_all_roman_provinces_with_0_autonomy = yes
}

to_achievement_the_only_colonizer_can_be_completed = {
	to_no_europeans_on_elysium = yes
}

to_achievement_no_more_schisms_can_be_completed = {
	to_is_elysian_orthodox = yes
	to_no_non_elysian_orthodox_provinces = yes
}

to_achievement_post_finem_can_be_completed = {
	to_reform_carthage = yes
	to_control_or_own_118 = yes
}

to_achievement_veni_vidi_vici_can_be_completed = {
	to_complete_a_true_nation = yes
	to_have_no_loans = yes
	to_have_less_than_5_corruption = yes
	to_have_less_than_5_administrative_burden = yes
}

to_achievement_re_restitutor_orbis_can_be_completed = {
	to_controls_all_former_roman_empire_land = yes
}

to_achievement_byzantine_blitz_can_be_completed = {
	to_has_completed_entire_elysian_mission_tree = yes
}