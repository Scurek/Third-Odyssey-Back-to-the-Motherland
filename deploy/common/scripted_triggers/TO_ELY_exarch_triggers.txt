to_is_an_SCOPE_exarchate = {
	custom_trigger_tooltip = {
		tooltip = to_is_an_exarchate_of_$SCOPE$_tt
		is_subject_of = $SCOPE$
    	is_subject_of_type = elysian_subject
	}
}

nhs_EEA_province = {
	region = caucasia_region
}

nhs_EEB_province = {
	region = british_isles_region
}

nhs_EEC_province = {
	region = scandinavia_region
}

nhs_EED_province = {
	region = carpathia_region
	NOT = { area = slovakia_area }
}

nhs_EEE_province = {
	region = egypt_region
}

nhs_EEF_province = {
	region = maghreb_region
}

nhs_EEG_province = {
	region = france_region
}

nhs_EEH_province = {
	region = iberia_region
}

nhs_EEK_province = {
	nhs_EEH_province = yes
}

nhs_EEI_province = {
	region = south_german_region
}

nhs_EEJ_province = {
	region = baltic_region
}

nhs_EEL_province = {
	OR = {
		region = russia_region
		region = ural_region
	}
	NOT = { area = tambov_area }
	NOT = { area = saratov_area }
	NOT = { area = samara_area }
	NOT = { area = kazan_area }
	NOT = { area = volga_area }
	NOT = { area = bashkiria_area }
}

nhs_EEM_province = {
	OR = {
		region = ruthenia_region
		area = red_ruthenia_area
	}
}

nhs_EEO_province = {
	region = mashriq_region
}

nhs_EER_province = {
	region = italy_region
}

nhs_EES_province = {
	OR = {
		region = crimea_region
		area = tambov_area
		area = saratov_area
		area = samara_area
		area = kazan_area
		area = volga_area
		area = bashkiria_area
		area = lower_yik_area
		area = nogai_area
	}
}

nhs_EET_province = {
	region = low_countries_region
}

nhs_EEU_province = {
	region = north_german_region
	NOT = { area = bohemia_area }
	NOT = { area = erzgebirge_area }
	NOT = { area = moravia_area }
	NOT = { area = lusatia_area }
}

nhs_EEV_province = {
	OR = {
		region = poland_region
		area = bohemia_area
		area = erzgebirge_area
		area = moravia_area
		area = lusatia_area
		area = slovakia_area
	}
	NOT = { area = red_ruthenia_area }
}

nhs_EEQ_province = {
	region = arabia_region
}

nhs_EEP_province = {
	OR = {
		region = persia_region
		region = khorasan_region
		area = khiva_area
		area = transoxiana_area
		area = termez_area
		area = transcaspia_area
	}
}

nhs_EEY_province = {
	region = balkan_region
	NOT = { nhs_greek_areas_no_culture = yes }
	if = {
		limit = {
			has_global_flag = to_elg_got_albania
		}
		NOT = { area = albania_area }
	}
}

nhs_EEW_province = {
	nhs_EEY_province = yes
}

nhs_EEK_province = {
	region = balkan_region
	NOT = { nhs_greek_areas_no_culture = yes }
}

nhs_EEN_province_no_flag_check = {
	NOT = { province_id = 321 }
	region = anatolia_region
}

nhs_EEN_province = {
	has_global_flag = to_een_got_anatolia
	nhs_EEN_province_no_flag_check = yes
}

nhs_ELG_province = {
	NOT = { province_id = 151 }
	OR = {
		nhs_greek_areas = yes
		AND = {
			NOT = { has_global_flag = to_een_got_anatolia }
			region = anatolia_region
		}
		AND = {
			has_global_flag = to_elg_got_albania
			area = albania_area
		}
	}
}

nhs_ELG_merchant_land_1 = {
	NOT = { province_id = 151 }
	OR = {
		nhs_greek_areas_no_culture = yes
		AND = {
			has_global_flag = to_elg_got_albania
			area = albania_area
		}
	}
}

nhs_ELG_merchant_land_2 = {
	# has_global_flag = to_elg_got_anatolia
	region = anatolia_region
	NOT = { province_id = 321 }
}

to_potential_exarch_province = {
	OR = {
		region = caucasia_region
		region = british_isles_region
		region = scandinavia_region
		region = carpathia_region
		region = egypt_region
		region = maghreb_region
		region = france_region
		region = iberia_region
		region = south_german_region
		region = baltic_region
		region = russia_region
		region = ural_region
		region = ruthenia_region
		region = mashriq_region
		region = italy_region
		region = crimea_region
		region = low_countries_region
		region = north_german_region
		region = poland_region
		region = arabia_region
		region = persia_region
		region = khorasan_region
		area = khiva_area
		area = transoxiana_area
		area = termez_area
		area = transcaspia_area
		area = lower_yik_area
		area = nogai_area
		AND = {
			region = balkan_region
			NOT = { province_id = 151 }
		}
		region = anatolia_region
	}
}

to_exarch_has_two_merchants = {
	to_exarch_has_merchant_land_2 = yes
	NOT = { has_country_flag = to_block_exarch_second_merchant }
}

to_exarch_has_merchant_land_2 = {
	# Code generated by exarchs/exarch_generation.py
	OR = {
		tag = ELG
	}
}

to_exarch_land = {
	# Code generated by exarchs/exarch_generation.py
	OR = {
		AND = {
			$SCOPE$ = { tag = EEA }
			nhs_EEA_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEB }
			nhs_EEB_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEC }
			nhs_EEC_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EED }
			nhs_EED_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEE }
			nhs_EEE_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEF }
			nhs_EEF_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEG }
			nhs_EEG_province = yes
		}
		AND = {
			$SCOPE$ = { tag = event_target:to_EEH_target }
			nhs_EEH_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEI }
			nhs_EEI_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEJ }
			nhs_EEJ_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEL }
			nhs_EEL_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEM }
			nhs_EEM_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEO }
			nhs_EEO_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EER }
			nhs_EER_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EES }
			nhs_EES_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EET }
			nhs_EET_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEU }
			nhs_EEU_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEV }
			nhs_EEV_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEQ }
			nhs_EEQ_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEP }
			nhs_EEP_province = yes
		}
		AND = {
			$SCOPE$ = { tag = event_target:to_EEY_target }
			nhs_EEY_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEN }
			nhs_EEN_province = yes
		}
		AND = {
			$SCOPE$ = { tag = ELG }
			nhs_ELG_province = yes
		}
	}
}

to_exarch_merchant_land = {
	# Code generated by exarchs/exarch_generation.py
	OR = {
		AND = {
			$SCOPE$ = { tag = EEA }
			nhs_EEA_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEB }
			nhs_EEB_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEC }
			nhs_EEC_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EED }
			nhs_EED_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEE }
			nhs_EEE_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEF }
			nhs_EEF_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEG }
			nhs_EEG_province = yes
		}
		AND = {
			$SCOPE$ = { tag = event_target:to_EEH_target }
			nhs_EEH_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEI }
			nhs_EEI_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEJ }
			nhs_EEJ_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEL }
			nhs_EEL_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEM }
			nhs_EEM_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEO }
			nhs_EEO_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EER }
			nhs_EER_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EES }
			nhs_EES_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EET }
			nhs_EET_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEU }
			nhs_EEU_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEV }
			nhs_EEV_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEQ }
			nhs_EEQ_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEP }
			nhs_EEP_province = yes
		}
		AND = {
			$SCOPE$ = { tag = event_target:to_EEY_target }
			nhs_EEY_province = yes
		}
		AND = {
			$SCOPE$ = { tag = EEN }
			nhs_EEN_province = yes
		}
		AND = {
			$SCOPE$ = { tag = ELG }
			nhs_ELG_merchant_land_1 = yes
		}
	}
}

to_exarch_merchant_land_2 = {
	# Code generated by exarchs/exarch_generation.py
	OR = {
		AND = {
			$SCOPE$ = { tag = ELG }
			nhs_ELG_merchant_land_2 = yes
		}
	}
}

to_exarch_trigger_from_province = {
	# Code generated by exarchs/exarch_generation.py
	if = {
		limit = { owner = { is_subject_of_type = elysian_subject } }
		owner = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEA_province = yes }
		EEA = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEB_province = yes }
		EEB = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEC_province = yes }
		EEC = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EED_province = yes }
		EED = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEE_province = yes }
		EEE = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEF_province = yes }
		EEF = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEG_province = yes }
		EEG = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEH_province = yes }
		event_target:to_EEH_target = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEI_province = yes }
		EEI = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEJ_province = yes }
		EEJ = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEL_province = yes }
		EEL = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEM_province = yes }
		EEM = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEO_province = yes }
		EEO = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EER_province = yes }
		EER = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EES_province = yes }
		EES = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EET_province = yes }
		EET = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEU_province = yes }
		EEU = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEV_province = yes }
		EEV = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEQ_province = yes }
		EEQ = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEP_province = yes }
		EEP = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEY_province = yes }
		event_target:to_EEY_target = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_EEN_province = yes }
		EEN = { $TRIGGER$ }
	}
	else_if = {
		limit = { nhs_ELG_province = yes }
		ELG = { $TRIGGER$ }
	}
}

to_check_all_exarchs_including_inactive = {
	# Code generated by exarchs/exarch_generation.py
	EEA = { $TRIGGER$ }
	EEB = { $TRIGGER$ }
	EEC = { $TRIGGER$ }
	EED = { $TRIGGER$ }
	EEE = { $TRIGGER$ }
	EEF = { $TRIGGER$ }
	EEG = { $TRIGGER$ }
	event_target:to_EEH_target = { $TRIGGER$ }
	EEI = { $TRIGGER$ }
	EEJ = { $TRIGGER$ }
	EEL = { $TRIGGER$ }
	EEM = { $TRIGGER$ }
	EEO = { $TRIGGER$ }
	EER = { $TRIGGER$ }
	EES = { $TRIGGER$ }
	EET = { $TRIGGER$ }
	EEU = { $TRIGGER$ }
	EEV = { $TRIGGER$ }
	EEQ = { $TRIGGER$ }
	EEP = { $TRIGGER$ }
	event_target:to_EEY_target = { $TRIGGER$ }
	EEN = { $TRIGGER$ }
	ELG = { $TRIGGER$ }
}

to_is_exarch_tag = {
	# Code generated by exarchs/exarch_generation.py
	OR = {
		tag = EEA
		tag = EEB
		tag = EEC
		tag = EED
		tag = EEE
		tag = EEF
		tag = EEG
		tag = event_target:to_EEH_target
		tag = EEI
		tag = EEJ
		tag = EEL
		tag = EEM
		tag = EEO
		tag = EER
		tag = EES
		tag = EET
		tag = EEU
		tag = EEV
		tag = EEQ
		tag = EEP
		tag = event_target:to_EEY_target
		tag = EEN
		tag = ELG
	}
}

to_has_created_an_exarch = {
	# Code generated by exarchs/exarch_generation.py
	OR = {
		has_country_flag = to_created_exarch_EEA
		has_country_flag = to_created_exarch_EEB
		has_country_flag = to_created_exarch_EEC
		has_country_flag = to_created_exarch_EED
		has_country_flag = to_created_exarch_EEE
		has_country_flag = to_created_exarch_EEF
		has_country_flag = to_created_exarch_EEG
		has_country_flag = to_created_exarch_EEH
		has_country_flag = to_created_exarch_EEK
		has_country_flag = to_created_exarch_EEI
		has_country_flag = to_created_exarch_EEJ
		has_country_flag = to_created_exarch_EEL
		has_country_flag = to_created_exarch_EEM
		has_country_flag = to_created_exarch_EEO
		has_country_flag = to_created_exarch_EER
		has_country_flag = to_created_exarch_EES
		has_country_flag = to_created_exarch_EET
		has_country_flag = to_created_exarch_EEU
		has_country_flag = to_created_exarch_EEV
		has_country_flag = to_created_exarch_EEQ
		has_country_flag = to_created_exarch_EEP
		has_country_flag = to_created_exarch_EEY
		has_country_flag = to_created_exarch_EEW
		has_country_flag = to_created_exarch_EEN
		has_country_flag = to_created_exarch_ELG
	}
}

nhs_exarch_owns_incorrect_province = {
	tag = $EXARCH_TAG$
	is_subject = yes
	is_subject_of_type = elysian_subject
	any_owned_province = {
		is_colony = no
		OR = {
			NOT = { nhs_$EXARCH_TAG$_province = yes }
			has_province_flag = nhs_exarch_province_exemption
		}
	}
	# exists = $EXARCH_TAG$
	# $EXARCH_TAG$ = {
	# 	is_subject_of = ROOT
	# 	is_subject_of_type = elysian_subject
	# }
	# any_province = {
	# 	owned_by = $EXARCH_TAG$
	# 	OR = {
	# 		NOT = { nhs_$EXARCH_TAG$_province = yes }
	# 		has_province_flag = nhs_exarch_province_exemption
	# 	}
	# }
}

nhs_exarch_province_owned_incorrectly = {
	owned_by = $EXARCH_TAG$
	owner = {
		is_subject_of_type = elysian_subject
		PREV = {
			NOT = { has_province_flag = to_exarch_permanently_owned_land_@PREV }
		}
	}
	OR = {
		NOT = { nhs_$EXARCH_TAG$_province = yes }
		has_province_flag = nhs_exarch_province_exemption
	}
}

to_can_see_exarch_province_ui_baseline = {
	to_potential_exarch_province = yes
	is_city = yes
	FROM = {
		nhs_check_all_elysian_tags = { CONDITION = tag }
	}
}

to_can_see_exarch_province_ui = {
	FROM = {
		has_country_flag = to_show_exarch_menu
	}
}


to_owns_potential_exarch_claim = {
	$EXARCH_TAG$ = {
		is_subject_of = ROOT
		is_subject_of_type = elysian_subject
	}
	any_owned_province = {
		nhs_$EXARCH_TAG$_province = yes
	}
}

to_exarch_owns_all_home_region_provinces = {
	tag = $EXARCH_TAG$
	NOT = {
		any_province = {
			nhs_$EXARCH_TAG$_province = yes
			NOT = { owned_by = $EXARCH_TAG$ }
		}
	}
}

to_owns_exarch_claim = {
	$EXARCH_TAG$ = {
		is_subject_of = ROOT
		is_subject_of_type = elysian_subject
	}
	any_owned_province = {
		has_province_flag = nhs_eligible_for_exarch_claim$EXARCH_TAG$
		NOT = { is_claim = $EXARCH_TAG$ }
		NOT = { is_permanent_claim = $EXARCH_TAG$ }
	}
}

to_province_is_or_accepts_religion_exarch = {
	if = {
		limit = {
			owner = {
				is_subject_of_type = elysian_subject
			}
		}
		custom_trigger_tooltip = {
			tooltip = province_is_or_accepts_$religion$_exarch_tt
			OR = {
				AND = {
					religion = $religion$
					has_owner_religion = yes
				}
				AND = {
					owner = { secondary_religion = $religion$ }
					OR = {
						religion = $religion$
						has_owner_religion = yes
					}
				}
				AND = {
					religion = $religion$
					to_has_overlord_religion = yes
				}
			}
		}
	}
	else = {
		custom_trigger_tooltip = {
			tooltip = province_is_or_accepts_$religion$_tt
			OR = {
				AND = {
					religion = $religion$
					has_owner_religion = yes
				}
				AND = {
					owner = { secondary_religion = $religion$ }
					OR = {
						religion = $religion$
						has_owner_religion = yes
					}
				}
			}
		}
	}
}

to_province_is_or_accepts_religion_group_exarch = {
	if = {
		limit = {
			owner = {
				is_subject_of_type = elysian_subject
			}
		}
		custom_trigger_tooltip = {
			tooltip = province_is_or_accepts_$religion_group$_exarch_tt
			OR = {
				AND = {
					religion_group = $religion_group$
					has_owner_religion = yes
				}
				AND = {
					owner = { secondary_religion_group = $religion_group$ }
					OR = {
						religion_group = $religion_group$
						has_owner_religion = yes
					}
				}
				AND = {
					religion_group = $religion_group$
					to_has_overlord_religion = yes
				}
			}
		}
	}
	else = {
		custom_trigger_tooltip = {
			tooltip = province_is_or_accepts_$religion_group$_tt
			OR = {
				AND = {
					religion_group = $religion_group$
					has_owner_religion = yes
				}
				AND = {
					owner = { secondary_religion_group = $religion_group$ }
					OR = {
						religion_group = $religion_group$
						has_owner_religion = yes
					}
				}
			}
		}
	}
}

to_owner_is_or_accepts_religion_group_exarch = {
	if = {
		limit = {
			owner = {
				is_subject_of_type = elysian_subject
			}
		}
		custom_trigger_tooltip = {
			tooltip = to_owner_is_or_accepts_$religion_group$_exarch_tt
			owner = {
				OR = {
					religion_group = $religion_group$
					secondary_religion_group = $religion_group$
					overlord = {
						OR = {
							religion_group = $religion_group$
							secondary_religion_group = $religion_group$
						}
					}
				}
			}
		}
	}
	else = {
		custom_trigger_tooltip = {
			tooltip = to_owner_is_or_accepts_$religion_group$_tt
			owner = {
				OR = {
					religion_group = $religion_group$
					secondary_religion_group = $religion_group$
				}
			}
		}
	}
}

to_province_is_or_accepts_culture_exarch = {
	if = {
		limit = {
			owner = {
				is_subject_of_type = elysian_subject
			}
		}
		OR = {
			has_owner_culture = yes
			has_owner_accepted_culture = yes
			custom_trigger_tooltip = {
				tooltip = to_has_overlords_culture_tt
				owner = {
					overlord = {
						ROOT = {
							PREV = {
								primary_culture = PREV
							}
						}
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = to_has_overlords_accepted_culture_tt
				owner = {
					overlord = {
						ROOT = {
							PREV = {
								accepted_culture = PREV
							}
						}
					}
				}
			}
		}
	}
	else = {
		OR = {
			has_owner_culture = yes
			has_owner_accepted_culture = yes
		}
	}
}

to_province_is_or_accepts_religion_both_orthodox_exarch = {
	if = {
		limit = {
			owner = {
				is_subject_of_type = elysian_subject
			}
		}
		custom_trigger_tooltip = {
			tooltip = to_province_is_or_accepts_religion_both_orthodox_exarch_tt
			OR = {
				to_province_is_or_accepts_religion_exarch = {
					religion = orthodox
				}
				to_province_is_or_accepts_religion_exarch = {
					religion = elysian_orthodoxy
				}
			}
		}
	}
	else = {
		custom_trigger_tooltip = {
			tooltip = to_province_is_or_accepts_religion_both_orthodox_tt
			OR = {
				province_is_or_accepts_religion = {
					religion = orthodox
				}
				province_is_or_accepts_religion = {
					religion = elysian_orthodoxy
				}
			}
		}
	}
}

to_has_exarch_government_reform = {
	OR = {
		has_reform = to_exarch_reform
		has_reform = to_exarch_reform_monarchy
		has_reform = to_exarch_reform_monarchy_locked_dynasty
	}
}

to_has_independant_exarch_government_reform = {
	OR = {
		has_reform = to_exarch_reform_independant
		has_reform = to_exarch_reform_monarchy_independant
		has_reform = to_exarch_reform_monarchy_locked_dynasty_independant
	}
}

to_has_extended_eic_background = {
	has_country_flag = to_exarch_has_peripheral_territories
}

to_province_always_counts_for_exarch_merchant = {
	OR = {
		has_province_flag = to_exarch_always_count_for_merchant
		owner = {
			PREV = {
				has_province_flag = to_exarch_permanently_owned_land_@PREV
			}
		}
		has_province_modifier = nhs2_supply_lines_tm
		has_province_modifier = nhs2_base_of_operations_tm
		has_province_modifier = to_varangian_headquarters
		owner = {
			is_subject_of_type = elysian_subject_varangian
		}
	}
}

to_exarch_can_get_province_base = {
	controlled_by = owner
	NOT = { has_any_ongoing_construction = yes }
	NOT = { has_province_modifier = nhs2_supply_lines_tm }
	NOT = { has_province_modifier = nhs2_base_of_operations_tm }
	NOT = { has_province_modifier = to_varangian_headquarters }
	hidden_trigger = {
		is_city = yes
	}
}

to_exarch_can_get_province_base_with_if = {
	controlled_by = owner
	NOT = { has_any_ongoing_construction = yes }
	if = {
		limit = {
			has_province_modifier = nhs2_supply_lines_tm
		}
		NOT = { has_province_modifier = nhs2_supply_lines_tm }
	}
	if = {
		limit = {
			has_province_modifier = nhs2_base_of_operations_tm
		}
		NOT = { has_province_modifier = nhs2_base_of_operations_tm }
	}
	if = {
		limit = {
			has_province_modifier = to_varangian_headquarters
		}
		NOT = { has_province_modifier = to_varangian_headquarters }
	}
	hidden_trigger = {
		is_city = yes
	}
}

to_exarch_can_get_province_active = {
	has_siege = no
	to_exarch_can_get_province_base = yes
}

to_exarch_can_get_province_active_with_if = {
	has_siege = no
	to_exarch_can_get_province_base_with_if = yes
}

to_exarch_can_get_province_passive = {
	to_exarch_can_get_province_active = yes
	NOT = { has_province_flag = nhs_exarch_province_exemption }
	is_owned_by_trade_company = no
	owner = {
		OR = {
			NOT = { is_state_core = PREV }
			tag = ELG
		}
	}
}

to_exarch_can_get_province_passive_with_if = {
	to_exarch_can_get_province_active_with_if = yes
	custom_trigger_tooltip = {
		tooltip = to_has_not_claimed_province_tt
		NOT = { has_province_flag = nhs_exarch_province_exemption }
	}
	is_owned_by_trade_company = no
	if = {
		limit = {
			owner = {
				NOT = { tag = ELG }
			}
		}
		NOT = { is_state_core = owner }
	}
}

to_exarch_can_get_province_on_owner_change = {
	to_exarch_can_get_province_base = yes
	NOT = { has_province_flag = nhs_exarch_province_exemption }
}