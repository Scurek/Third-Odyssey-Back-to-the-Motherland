# Code generated by colonial regions/claim_colonial_regions.py
# Colonial Andronika & Skythia, cheaper variant
# For some reason each treaty has to be in its own file...
to_pt_colonial_treaty_colonial_louisiana_cheaper = {	
	category = 6
	power_projection = 5
	power_cost_base = 0
	prestige_base = 0.5
	ae_base = 0
	warscore_cost = {
		all_provinces = 0
		no_provinces = 10.0
		owner_keeps = 0.0
		conquered = 0.0
		returned_core = 0.0
		released_nation = 0.0
		cancelled_subject = 0.0
		concede_colonial_region = 0.0
	}
	warscore_cap = 10.0
	requires_demand_independence = yes
	is_make_subject = no
	requires_is_allowed = no
	
	is_visible = {
	    # Probably not something that ai should use
	    ai = no
	    
		to_can_use_pt_colonial_treaties_elysium = yes
		to_cheaper_use_pt_colonial_treaties = yes
		colonial_louisiana = {
            to_country_or_subject_or_subject_of_subject_holds = { TAG = ROOT }
        }
		FROM = {
			OR = {
				NOT = { has_country_flag = to_cannot_colonise_colonial_louisiana }
				had_country_flag = {
					flag = to_cannot_colonise_colonial_louisiana
					days = 7300
				}
			}
			NOT = {
				AND = {
					has_country_modifier = nhs2_por_ely_trade
					ROOT = { has_country_modifier = nhs2_ely_por_trade }
				}
			}
			is_subject = no
			num_of_colonists = 1
			NOT = {
				capital_scope = {
                    colonial_region = colonial_louisiana
				}
			}
            colonial_louisiana = {
				OR = {
                    is_empty = yes
                    AND = {
                        is_colony = yes
                        to_country_or_subject_or_subject_of_subject_holds = { TAG = FROM }
                    }
                }
			}
		}
	}
	is_allowed = {
		always = yes
	}
	effect = {
		FROM = {
			set_country_flag = to_cannot_colonise_colonial_louisiana
		}
		every_province = {
			limit = {
                colonial_region = colonial_louisiana
				to_country_or_subject_or_subject_of_subject_holds = { TAG = FROM }
				is_colony = yes
			}
			add_colonysize = -2000
		}
	}
	ai_weight = {
		export_to_variable = {
			variable_name = ai_value
			value = 0
		}
		limit = {
			always = no
		}
	}
}