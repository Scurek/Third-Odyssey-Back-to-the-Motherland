from jinja2 import Template
from roads import roads

output_file_scripted_triggers = "road_scripted_triggers.txt"
output_file_scripted_effects = "road_scripted_effects.txt"
output_file_LOC = "localisation_elysian_highways.txt"
output_file_CL = "customizable_localisation_mission_checks.txt"

template_road_triggers = Template('''{%- for road in roads %}
to_elysian_highway_{{ road["name"] }}_province_trigger = {
    # Code generated by elysian_highways_road_check.py
    OR = {
{%- for province in road["provinces"] %}
        $TRIGGER$ = {{ province["id"] }}
{%- endfor %}
    }
}
{% endfor %}
''')

template_road_ownership = Template('''{%- for road in roads %}
{%- if "has_ownership_check" in road %}
to_owns_elysian_highway_{{ road["name"] }} = { 
    # Code generated by elysian_highways_road_check.py
    {%- for province in road["provinces"] %}
    {{ province["id"] }} = { country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT } } 
    {%- endfor %}
}
{%- endif %}
{% endfor %}
''')

f = open(output_file_scripted_triggers, "w")
f.write(template_road_triggers.render(roads=roads))
f.write(template_road_ownership.render(roads=roads))
f.close()

template = Template('''{%- for road in roads %}
to_elysian_highway_{{ road["name"] }}_effect = {
    # Code generated by elysian_highways_road_check.py
{%- for province in road["provinces"] %}
    if = {
        limit = { {{ province["id"] }} = { $PROVINCE_TRIGGER$ = yes } }
        {{ province["id"] }} = { $PROVINCE_EFFECT$ = yes }
    }
{%- endfor %}
}
{% endfor %}
''')

f = open(output_file_scripted_effects, "w")
f.write(template.render(roads=roads))
f.close()

templateCL = Template('''{%- for road in roads %}
{%- for province in road["provinces"] %}
{%- if "duplicate" not in province %}
defined_text = {
	name = OwnsOrAllyOwns_{{ province["id"] }}
	random = no
	text = {
		localisation_key = to_nat_y_icon_tt
		trigger = {
			{{ province["id"] }} = { country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT } }
		}
	}
	text = {
		localisation_key = to_nat_x_icon_tt
	}
}
{%- endif %}
{% endfor %}
{%- endfor %}
''')

f = open(output_file_CL, "w")
f.write("# Code generated by elysian_highways_road_check.py\n")
f.write(templateCL.render(roads=roads))
f.close()

f = open(output_file_LOC, "w", encoding='cp1250')
for road in roads:
    if "has_mission_trigger" not in road:
        continue
    f.write(f' to_owns_elysian_highway_{road["name"]}_tt:0 "The following provinces are owned by §Y[Root.GetName]§! or '
            f'its Allies, their subjects, or the subjects of their subjects:')
    for province in road["provinces"]:
        f.write(f'\\n   [Root.OwnsOrAllyOwns_{province["id"]}]§Y[{province["id"]}.GetName]§!')
    f.write('\"\n')
f.write('\n')
for road in roads:
    f.write(f' to_elysian_highway_{road["name"]}_provinces_tt:0 \"')
    for province in road["provinces"][:-1]:
        f.write(f'[{province["id"]}.GetName], ')
    f.write(f'[{road["provinces"][-1]["id"]}.GetName]\"\n')
f.write('\n')
for road in roads:
    if "has_add_modifiers" not in road:
        continue
    f.write(f' to_elysian_highway_{road["name"]}_add_modifiers_tt:0 \"')
    for province in road["provinces"][:-1]:
        f.write(f'[{province["id"]}.GetName], ')
    f.write(f'and [{road["provinces"][-1]["id"]}.GetName] ')
    f.write(f'get \'§YElysian Highways§!\' modifier until the end of the game, giving the following effect:\\n')
    f.write(f' Local Development Cost: §G-10.0%§!\\n Local Trade Power: §G+25.0%§!\\n Friendly Movement Speed: '
            f'§G+25.0%§!\\n Hostile Movement Speed: §R+20.0%§!\"\n')
f.close()

f = open(output_file_CL, "w")
f.write("# Code generated by elysian_highways_road_check.py\n")
f.write(templateCL.render(roads=roads))
f.close()
