import os

from jinja2 import Template
from roads import roads

output_file_scripted_triggers = "o_road_scripted_triggers.txt"
output_file_scripted_effects = "o_road_scripted_effects.txt"
output_file_LOC = "o_localisation_elysian_highways.txt"
output_file_CL = "o_customizable_localisation.txt"
output_file_decisions = "o_decisions.txt"

file_path = f"{os.path.basename(os.getcwd())}/{os.path.basename(__file__)}"

template_road_triggers = Template('''{%- for road in roads %}
to_elysian_highway_{{ road["name"] }}_province_trigger = {
    # Code generated by {{ file_path }}
    OR = {
{%- for province in road["provinces"] %}
        $TRIGGER$ = {{ province["id"] }}
{%- endfor %}
    }
}
{% endfor %}
''')

template_road_ownership = Template('''{% for road in roads %}
{%- if "has_ownership_check" in road %}
to_owns_elysian_highway_{{ road["name"] }} = {
    # Code generated by {{ file_path }}
    {%- for province in road["provinces"] %}
    {{ province["id"] }} = { country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT } }
    {%- endfor %}
}
{%- endif %}
{%- endfor %}
''')

f = open(output_file_scripted_triggers, "w")
f.write(template_road_triggers.render(roads=roads, file_path=file_path))
f.write(template_road_ownership.render(roads=roads, file_path=file_path))
f.close()

template = Template('''{%- for road in roads %}
to_elysian_highway_{{ road["name"] }}_effect = {
    # Code generated by {{ file_path }}
{%- for province in road["provinces"] %}
    if = {
        limit = { {{ province["id"] }} = { $PROVINCE_TRIGGER$ = yes } }
        {{ province["id"] }} = { $PROVINCE_EFFECT$ = yes }
    }
{%- endfor %}
}
{% endfor %}
''')

f = open(output_file_scripted_effects, "w")
f.write(template.render(roads=roads, file_path=file_path))
f.close()

templateCL = Template('''{%- for road in roads %}
{%- for province in road["provinces"] %}
{%- if "duplicate" not in province %}
defined_text = {
	name = OwnsOrAllyOwns_{{ province["id"] }}
	random = no
	text = {
		localisation_key = to_y_icon_tt
		trigger = {
			{{ province["id"] }} = { country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT } }
		}
	}
	text = {
		localisation_key = to_x_icon_tt
	}
}
{%- endif %}
{% endfor %}
{%- endfor %}
''')

f = open(output_file_CL, "w")
f.write(f"# Code generated by {os.path.basename(os.getcwd())}/{os.path.basename(__file__)}\n")
f.write(templateCL.render(roads=roads))
f.close()

f = open(output_file_LOC, "w", encoding='cp1250')
f.write(f"# Code generated by {os.path.basename(os.getcwd())}/{os.path.basename(__file__)}\n")
for road in roads:
    if "has_mission_trigger" not in road:
        continue
    f.write(f' to_owns_elysian_highway_{road["name"]}_tt:0 "The following provinces are owned by §Y[Root.GetName]§! or '
            f'its Allies, their subjects, or the subjects of their subjects:')
    for province in road["provinces"]:
        f.write(f'\\n   [Root.OwnsOrAllyOwns_{province["id"]}]§Y[{province["id"]}.GetName]§!')
    f.write('\"\n')
f.write('\n')
for road in roads:
    if "has_mission_trigger" in road:
        continue
    f.write(f' to_owns_elysian_highway_{road["name"]}_tt:0 "At least one of the following provinces is owned '
            f'by §Y[Root.GetName]§! or '
            f'its Allies, their subjects, or the subjects of their subjects:')
    for province in road["provinces"]:
        f.write(f'\\n   [Root.OwnsOrAllyOwns_{province["id"]}]§Y[{province["id"]}.GetName]§!')
    f.write('\"\n')
f.write('\n')
for road in roads:
    f.write(f' to_elysian_highway_{road["name"]}_provinces_tt:0 \"')
    for province in road["provinces"][:-1]:
        f.write(f'[{province["id"]}.GetName], ')
    f.write(f'[{road["provinces"][-1]["id"]}.GetName]\"\n')
f.write('\n')
for road in roads:
    if "no_decision" in road:
        continue
    f.write(f' to_elysian_highway_{road["name"]}_provinces_effect_list_tt:0 \"'
            f'Construction of §YElysian Highways§! will begin in the following provinces as long as they are owned '
            f'by §Y[Root.GetName]§! '
            f'or its Allies, their subjects, or the subjects of their subjects: ')
    for i, province in enumerate(road["provinces"]):
        f.write(f'§Y[{province["id"]}.GetName]§!')
        if i == len(road["provinces"]) - 2:
            f.write(" and ")
        elif i <= len(road["provinces"]) - 2:
            f.write(", ")
    f.write(".\"\n")
f.write('\n')
for road in roads:
    if "has_add_modifiers" not in road:
        continue
    f.write(f' to_elysian_highway_{road["name"]}_add_modifiers_tt:0 \"')
    for province in road["provinces"][:-1]:
        f.write(f'[{province["id"]}.GetName], ')
    f.write(f'and [{road["provinces"][-1]["id"]}.GetName] ')
    f.write(f'get \'§YElysian Highway§!\' modifier until the end of the game, giving the following effects:\\n')
    f.write(f' Local Development Cost: §G-10.0%§!\\n Local Trade Power: §G+1.00§!\\n Friendly Movement Speed: '
            f'§G+25.0%§!\\n Hostile Movement Speed: §R+20.0%§!\"\n')
f.close()

template_decisions = Template('''{%- for road in roads %}
{%- if "no_decision" not in road %}
    to_construct_{{ road["name"] }}_elysian_highway = {
		potential = {
		    nhs_check_all_elysian_tags = { CONDITION = tag }
			has_global_flag = to_elysian_highways_project_tier_{{ road["tier"] }}
			NOT = { has_global_flag = to_elysian_highways_{{ road["name"] }}_enabled }
		}

		provinces_to_highlight = {
		    {%- if "requires_build" in road %}
		    OR = {
		        to_elysian_highway_{{ road["name"] }}_province_trigger = { TRIGGER = province_id }
		        AND = {
		            OR = {
		                {%- for province in road["requires_build"] %}
		                province_id = {{ province }}
		                {%- endfor %}
		            }
		            NOT = { to_has_elysian_highway_modifier = yes }
		        }
		    }
			{%- else %}
			to_elysian_highway_{{ road["name"] }}_province_trigger = { TRIGGER = province_id }
			{%- endif %}
		}

		allow = {
			treasury = {{ road["cost"] }}
			{%- if "requires_build" in road %}
			{%- for province in road["requires_build"] %}
			{{ province }} = {
				to_has_elysian_highway_modifier = yes
			}
			{%- endfor %}
			{%- endif %}
			custom_trigger_tooltip = {
				tooltip = to_owns_elysian_highway_{{ road["name"] }}_tt
				any_province = {
					to_elysian_highway_{{ road["name"] }}_province_trigger = { TRIGGER = province_id }
					country_or_subject_or_ally_or_ally_subject_holds = { TAG = ROOT }
				}
			}
		}

		effect = {
			if = {
				limit = {
					ai = no
				}
				add_treasury = -{{ road["cost"] }}
			}
			else = {
				add_treasury = -{{ (road["cost"] / 2) | int }}
			}
			set_global_flag = to_elysian_highways_{{ road["name"] }}_enabled
			custom_tooltip = to_elysian_highway_{{ road["name"] }}_provinces_effect_list_tt
			hidden_effect = {
				every_province = {
					limit = {
						NOT = { to_has_elysian_highway_modifier = yes }
						NOT = { has_province_modifier = nhs_elysian_highways_inactive }
						to_elysian_highway_{{ road["name"] }}_province_trigger = { TRIGGER = province_id }
					}
					add_permanent_province_modifier = {
						name = nhs_elysian_highways_inactive
						duration = -1
					}
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				num_of_loans = 1
			}
		}
	}
{%- endif %}
{%- endfor %}
''')
f = open(output_file_decisions, "w")
f.write(f"    # Code generated by {os.path.basename(os.getcwd())}/{os.path.basename(__file__)}")
f.write(template_decisions.render(roads=roads))
f.close()